[package]
name = "fintradex-runtime"
description = "FintradeX Runtime - A decentralized financial trading parachain runtime built with Polkadot SDK. Features multi-asset trading, cross-chain interoperability, Ethereum compatibility, and advanced governance systems for the future of DeFi trading."
version = "0.1.0"
license = "Unlicense"
authors.workspace = true
homepage.workspace = true
repository.workspace = true
edition.workspace = true
publish = false

[package.metadata.docs.rs]
targets = ["x86_64-unknown-linux-gnu"]

[build-dependencies]
substrate-wasm-builder = { optional = true, workspace = true, default-features = true }
docify = { workspace = true }

[dependencies]
codec = { features = ["derive"], workspace = true }
hex-literal = { optional = true, workspace = true, default-features = true }
log = { workspace = true }
smallvec = { workspace = true, default-features = true }
docify = { workspace = true }
polkadot-sdk = { workspace = true, features = ["cumulus-pallet-aura-ext", "cumulus-pallet-session-benchmarking", "cumulus-pallet-xcm", "cumulus-pallet-xcmp-queue", "cumulus-primitives-aura", "cumulus-primitives-core", "cumulus-primitives-storage-weight-reclaim",
 "cumulus-primitives-utility", "pallet-aura", "pallet-authorship", "pallet-balances", 
 "pallet-collator-selection", "pallet-message-queue", "pallet-session", "pallet-sudo", 
 "pallet-timestamp", "pallet-transaction-payment", "pallet-transaction-payment-rpc-runtime-api", 
 "pallet-xcm", "parachains-common", "polkadot-parachain-primitives", "polkadot-runtime-common", 
 "runtime", "staging-parachain-info", "staging-xcm", 
 "staging-xcm-builder", "staging-xcm-executor","cumulus-pallet-weight-reclaim"], default-features = false }
cumulus-pallet-parachain-system.workspace = true

frame-benchmarking = { optional = true, workspace = true }
frame-executive.workspace = true
frame-metadata-hash-extension.workspace = true
frame-support = { features = ["experimental"], workspace = true }
frame-system-benchmarking = { optional = true, workspace = true }
frame-system-rpc-runtime-api.workspace = true
frame-system.workspace = true
frame-try-runtime = { optional = true, workspace = true }
frame-election-provider-support = { optional = true, workspace = true }
pallet-aura.workspace = true
pallet-balances.workspace = true
pallet-grandpa.workspace = true
pallet-sudo.workspace = true
pallet-timestamp.workspace = true
pallet-transaction-payment-rpc-runtime-api.workspace = true
pallet-transaction-payment.workspace = true
pallet-contracts.workspace = true
pallet-assets.workspace = true
pallet-vesting.workspace = true
pallet-bounties.workspace = true
pallet-child-bounties.workspace = true
pallet-authorship.workspace = true
pallet-indices.workspace = true
pallet-multisig.workspace = true
pallet-utility.workspace = true
pallet-asset-conversion.workspace = true
pallet-asset-conversion-ops.workspace = true
pallet-preimage.workspace = true
pallet-parameters.workspace = true
pallet-skip-feeless-payment.workspace = true
pallet-whitelist.workspace = true
pallet-collective.workspace = true
pallet-conviction-voting.workspace = true
pallet-scheduler.workspace = true
pallet-referenda.workspace = true
pallet-asset-rate.workspace = true
pallet-treasury.workspace = true
pallet-salary.workspace = true
pallet-ranked-collective.workspace = true
pallet-core-fellowship.workspace = true
pallet-election-provider-multi-phase.workspace = true
pallet-bags-list.workspace = true
pallet-session.workspace = true
pallet-session-benchmarking.workspace = true
pallet-fast-unstake.workspace = true
pallet-membership.workspace = true
pallet-staking.workspace = true
pallet-nomination-pools.workspace = true
pallet-nomination-pools-benchmarking.workspace = true
pallet-nomination-pools-runtime-api.workspace = true
pallet-staking-reward-curve.workspace = true
pallet-authority-discovery.workspace = true
pallet-insecure-randomness-collective-flip.workspace = true
scale-info = { features = ["derive", "serde"], workspace = true }
serde_json = { workspace = true, default-features = false, features = ["alloc"] }
sp-api.workspace = true
sp-block-builder.workspace = true
sp-consensus-aura = { features = ["serde"], workspace = true }
sp-consensus-grandpa = { features = ["serde"], workspace = true }
sp-core = { features = ["serde"], workspace = true }
sp-genesis-builder.workspace = true
sp-inherents.workspace = true
sp-keyring.workspace = true
sp-offchain.workspace = true
sp-runtime = { features = ["serde"], workspace = true }
sp-session.workspace = true
sp-storage.workspace = true
sp-transaction-pool.workspace = true
sp-version = { features = ["serde"], workspace = true }
sp-consensus-beefy = {workspace = true }
primitive-types = { workspace = true }
sp-staking = { workspace = true }
sp-io = { workspace = true }
sp-std = { workspace = true }
pallet-evm = { workspace = true }
pallet-ethereum= {workspace = true }
pallet-evm-precompile-simple = {workspace = true }
pallet-evm-precompile-modexp = {workspace = true }
pallet-evm-precompile-sha3fips = {workspace = true }
pallet-dynamic-fee = {workspace = true }
pallet-beefy = {workspace = true}
pallet-mmr = {workspace = true}
pallet-beefy-mmr = {workspace = true}
pallet-im-online = {workspace = true}
pallet-offences = {workspace = true}
pallet-offences-benchmarking = {workspace = true}
fp-evm = {workspace = true, features = ["serde"] }
fp-self-contained = {workspace = true, features = ["serde"] }
fp-rpc = {workspace = true }
fp-account = { workspace = true, features = ["serde"] }
pallet-base-fee = {workspace = true }
pallet-evm-chain-id={workspace = true }
pallet-xcm={workspace = true}
polkadot-parachain-primitives={workspace = true}
polkadot-runtime-common={workspace = true}
staging-xcm={workspace = true}
staging-xcm-builder={workspace = true}
staging-xcm-executor={workspace = true}
cumulus-pallet-aura-ext={workspace = true}
cumulus-pallet-session-benchmarking={workspace = true}
cumulus-pallet-xcm={workspace = true}
cumulus-primitives-aura={workspace = true}
cumulus-primitives-core={workspace = true}
cumulus-primitives-utility={workspace = true}
pallet-collator-selection={workspace = true}
parachains-common={workspace = true}
staging-parachain-info={workspace = true}


[features]
default = ["std", "with-rocksdb-weights"]
with-rocksdb-weights = []
with-paritydb-weights = []
std = [
	"log/std",
	"polkadot-sdk/std",
	"serde_json/std",
	"codec/std",
	"frame-benchmarking?/std",
	"frame-executive/std",
	"frame-metadata-hash-extension/std",
	"frame-support/std",
	"frame-system-benchmarking?/std",
	"frame-system-rpc-runtime-api/std",
	"frame-system/std",
	"frame-try-runtime?/std",
	"frame-election-provider-support/std",
	"pallet-aura/std",
	"pallet-balances/std",
	"pallet-grandpa/std",
	"pallet-sudo/std",
	"pallet-timestamp/std",
	"pallet-transaction-payment-rpc-runtime-api/std",
	"pallet-transaction-payment/std",
	"pallet-assets/std",
	"pallet-vesting/std",
	"pallet-child-bounties/std",
	"pallet-bounties/std",
	"pallet-authorship/std",
	"pallet-im-online/std",
	"pallet-authority-discovery/std",
	"pallet-indices/std",
	"pallet-multisig/std",
	"pallet-asset-conversion/std",
	"pallet-asset-conversion-ops/std",
	"pallet-preimage/std",
	"pallet-skip-feeless-payment/std",
	"pallet-whitelist/std",
	"pallet-collective/std",
	"pallet-conviction-voting/std",
	"pallet-scheduler/std",
	"pallet-referenda/std",
	"pallet-asset-rate/std",
	"pallet-treasury/std",
	"pallet-salary/std",
	"pallet-bags-list/std",
	"pallet-ranked-collective/std",
	"pallet-core-fellowship/std",
	"pallet-election-provider-multi-phase/std",
	"pallet-session/std",
	"pallet-session-benchmarking/std",
	"pallet-fast-unstake/std",
	"pallet-membership/std",
	"pallet-staking/std",
	"pallet-nomination-pools/std",
	"pallet-nomination-pools-benchmarking/std",
	"pallet-nomination-pools-runtime-api/std",
	"pallet-contracts/std",
	"pallet-insecure-randomness-collective-flip/std",
	"pallet-beefy/std",
	"pallet-mmr/std",
	"pallet-beefy-mmr/std",
	"pallet-offences/std",
	"pallet-offences-benchmarking/std",
	"pallet-xcm/std",
	"polkadot-parachain-primitives/std",
	"polkadot-runtime-common/std",
	"staging-xcm/std",
	"staging-xcm-builder/std",
	"staging-xcm-executor/std",
	"cumulus-pallet-aura-ext/std",
	"cumulus-pallet-session-benchmarking/std",
	"cumulus-pallet-xcm/std",
	"cumulus-primitives-aura/std",
	"cumulus-primitives-core/std",
	"cumulus-primitives-utility/std",
	"cumulus-pallet-parachain-system/std",
	"pallet-collator-selection/std",
	"parachains-common/std",
	"staging-parachain-info/std",
	"scale-info/std",
	"sp-api/std",
	"sp-block-builder/std",
	"sp-consensus-aura/std",
	"sp-consensus-grandpa/std",
	"sp-consensus-beefy/std",
	"sp-core/std",
	"sp-genesis-builder/std",
	"sp-inherents/std",
	"sp-keyring/std",
	"sp-offchain/std",
	"sp-runtime/std",
	"sp-session/std",
	"sp-storage/std",
	"sp-transaction-pool/std",
	"sp-version/std",
	"sp-staking/std",
	"sp-io/std",
	"pallet-evm/std",
	"pallet-evm-precompile-simple/std",
	"pallet-evm-precompile-modexp/std",
	"fp-evm/std",
	"fp-self-contained/std",
	"fp-rpc/std",
	"pallet-base-fee/std",
	"pallet-dynamic-fee/std",
	"pallet-evm-chain-id/std",
	"pallet-evm/std",
	"pallet-ethereum/std",
	"pallet-evm-precompile-simple/std",
	"pallet-evm-precompile-modexp/std",
	"fp-evm/std",
	"fp-self-contained/std",
	"fp-rpc/std",
	"pallet-base-fee/std",
	"pallet-dynamic-fee/std",
	"pallet-evm-chain-id/std",
	"substrate-wasm-builder",
]

runtime-benchmarks = [
	"hex-literal",
	"polkadot-sdk/runtime-benchmarks",
	"pallet-contracts/runtime-benchmarks",
]

try-runtime = [
	"cumulus-pallet-parachain-system/try-runtime",
	"polkadot-sdk/try-runtime",
	"pallet-contracts/try-runtime",
]

# Enable the metadata hash generation.
#
# This is hidden behind a feature because it increases the compile time.
# The wasm binary needs to be compiled twice, once to fetch the metadata,
# generate the metadata hash and then a second time with the
# `RUNTIME_METADATA_HASH` environment variable set for the `CheckMetadataHash`
# extension.
metadata-hash = ["substrate-wasm-builder/metadata-hash"]

# A convenience feature for enabling things when doing a build
# for an on-chain release.
on-chain-release-build = ["metadata-hash"]
